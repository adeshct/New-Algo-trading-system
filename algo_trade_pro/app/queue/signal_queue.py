"""
app/queue/signal_queue.py

Thread-safe FIFO queue for sharing market data and signals between threads in the algo_trade_pro platform.
This file defines queues used by DataCollector (producer) and StrategyEngine (consumer), as well as any other
threads that require exchanging signal data.

For typical trading scenarios, FIFO order is sufficient; if you require prioritized signals,
use PriorityQueue from the 'queue' module.
"""

from queue import Queue

# Market data (dict or pandas-like record) posted by DataCollector, consumed by StrategyEngine
market_data_queue = Queue(maxsize=0)  # 0 means infinite size

# Signals generated by strategies, fetched by the trade executor
trade_signal_queue = Queue(maxsize=0)

websocket_queue = Queue(maxsize=0)

# Example Usage in Threads:
#   market_data_queue.put(data_dict)
#   data = market_data_queue.get()
#   trade_signal_queue.put(signal_dict)
#   signal = trade_signal_queue.get()

# If you ever want a thread-safe priority queue:
# from queue import PriorityQueue
# priority_signal_queue = PriorityQueue()
